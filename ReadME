Part-A
Question:

1. How many total combinations are possible when rolling both Die A and Die B together?
Answer:

When two six-sided dice are rolled together, there are a total of 36 possible outcomes. This is because each die has 6 faces, and the total number of outcomes is equal to the number of faces on Die A multiplied by the number of faces on Die B, so the total number of combinations is:

6 (faces on Die A) * 6 (faces on Die B) = 36 combinations

Python code :

num_sides = 6

total_combinations = num_sides * num_sides
print(f"The total number of combinations is {total_combinations}")

Output:

Question:

2. Calculate and display the distribution of all possible combinations that can be obtained when rolling both Die A and Die B together.
Answer:

To calculate the distribution of all possible combinations, we can create a 6x6 matrix where the row and column indices represent the faces of Die A and Die B, respectively. The value at the intersection of row i and column j represents the combination (Die A = i, Die B = j).

Python code :

num_sides = 6

total_combinations = num_sides * num_sides
print(f"The total number of combinations is {total_combinations}")

combination_matrix = [[0 for _ in range(num_sides)] for _ in range(num_sides)]

for i in range(num_sides):
    for j in range(num_sides):
        combination_matrix[i][j] = i + j + 2  # Add 2 to shift the range from 0-11 to 2-12


for row in combination_matrix:
    print(row)



Output:


Question:

3. Calculate the probability of all possible sums occurring among the number of combinations.
Answer:

To calculate the probability of all possible sums occurring among the number of combinations, we can first calculate the total number of combinations, which is equal to the product of the number of faces on Die A and the number of faces on Die B.

We can then calculate the sum of each combination by adding the values of the faces on Die A and Die B. We can then count the number of combinations that result in each sum and divide by the total number of combinations to obtain the probability.

Python code :

num_sides = 6

total_combinations = num_sides * num_sides
print(f"The total number of combinations is {total_combinations}")

combination_matrix = [[0 for _ in range(num_sides)] for _ in range(num_sides)]

for i in range(num_sides):
    for j in range(num_sides):
        combination_matrix[i][j] = i + j + 2  # Add 2 to shift the range from 0-11 to 2-12


for row in combination_matrix:
    print(row)

sum_occurrences = {}
for row in combination_matrix:
    for num in row:
        if num in sum_occurrences:
            sum_occurrences[num] += 1
        else:
            sum_occurrences[num] = 1

# Calculate the probability of each sum
for sum, occurrences in sum_occurrences.items():
    probability = occurrences / total_combinations
    print(f"P(Sum = {sum}) = {probability}")



Output:
